@use "sass:map";
@use "config" as *;
@use "tokens" as *;
@use "utilities" as *;
@use "base" as *;
@use "core/validations.core" as *;
@use "core/colors.core" as *;
@use "core/utils.core" as *;

/*
 * ================ Internal and Derived Variables ================
 *
 * This file extracts values from configuration wrappers and creates
 * flat variables for internal framework use. Maintains the existing API
 * while internally using the new map structure.
 *
 * VALIDATION ORDER: Critical validations run first (fail fast)
 * VARIABLE EXTRACTION: Flat variables derived from wrapper maps
 * API COMPATIBILITY: Same variable names as before, different sources
 */

/*
 * ================ Validation Phase ================
 * Critical validations that must pass before processing
 */

// Validate all configuration structures
$_framework-valid: validate-framework-config($framework);
$_utilities-valid: validate-utilities-config($utilities);
$_tokens-valid: validate-tokens-structure($tokens);
$_base-valid: validate-base-config($base);

// Extract and validate theme configuration
$primary-theme: map.get($framework, primary-theme);
$themes: map.get($tokens, themes);
$_themes-valid: validate-themes($themes, $primary-theme);

/*
 * ================ Framework Configuration Variables ================
 * Extracted from $framework wrapper for internal use
 */

$enable-reset: map.get($framework, reset);
$enable-base: map.get($framework, base);
$css-variables: map.get($framework, css-variables);
$responsive-breakpoints: map.get($framework, responsive-breakpoints);

/*
 * ================ Utility Configuration Variables ================
 * Extracted from $utilities wrapper for internal use
 */

// Global utility settings
$utility-config: map.get($utilities, config);
$utility-classes: map.get($utilities, classes);

$utilities-prefix: map.get($utility-config, prefix);
$utilities-important: map.get($utility-config, important);
$utilities-responsive: map.get($utility-config, responsive);
$utilities-hover: map.get($utility-config, hover);
$utilities-abbreviations: map.get($utility-config, abbreviations);

// Processed values for framework use
$prefix: check-prefix($utilities-prefix);
$important: check-important($utilities-important);

// Individual utility class controls (flat variables for easy access)
$generate-background-colors: map.get($utility-classes, background-colors) != "";
$generate-background-opacity: map.get($utility-classes, background-opacity) != "";
$generate-text-colors: map.get($utility-classes, text-colors) != "";
$generate-text-opacity: map.get($utility-classes, text-opacity) != "";
$generate-background-gradients: map.get($utility-classes, background-gradients) != "";
$generate-text-gradients: map.get($utility-classes, text-gradients) != "";
$generate-border-gradients: map.get($utility-classes, border-gradients) != "";

$generate-font-sizes: map.get($utility-classes, font-sizes) != "";
$generate-font-weights: map.get($utility-classes, font-weights) != "";
$generate-font-families: map.get($utility-classes, font-families) != "";
$generate-line-heights: map.get($utility-classes, line-heights) != "";
$generate-letter-spacing: map.get($utility-classes, letter-spacing) != "";
$generate-text-alignment: map.get($utility-classes, text-alignment) != "";
$generate-text-transforms: map.get($utility-classes, text-transforms) != "";
$generate-text-decorations: map.get($utility-classes, text-decorations) != "";
$generate-text-truncation: map.get($utility-classes, text-truncation) != "";
$generate-style-guide: map.get($utility-classes, style-guide) != "";

$generate-margins: map.get($utility-classes, margins) != "";
$generate-paddings: map.get($utility-classes, paddings) != "";

$generate-widths: map.get($utility-classes, widths) != "";
$generate-heights: map.get($utility-classes, heights) != "";
$generate-viewport-widths: map.get($utility-classes, viewport-widths) != "";
$generate-viewport-heights: map.get($utility-classes, viewport-heights) != "";
$generate-max-widths: map.get($utility-classes, max-widths) != "";
$generate-max-heights: map.get($utility-classes, max-heights) != "";

$generate-border-positions: map.get($utility-classes, border-positions) != "";
$generate-border-colors: map.get($utility-classes, border-colors) != "";
$generate-border-widths: map.get($utility-classes, border-widths) != "";
$generate-border-styles: map.get($utility-classes, border-styles) != "";
$generate-border-radius: map.get($utility-classes, border-radius) != "";

$generate-shadows: map.get($utility-classes, shadows) != "";
$generate-opacities: map.get($utility-classes, opacities) != "";

$generate-display: map.get($utility-classes, display) != "";
$generate-position: map.get($utility-classes, position) != "";
$generate-overflow: map.get($utility-classes, overflow) != "";

$generate-cursors: map.get($utility-classes, cursors) != "";
$generate-css-variables: map.get($utility-classes, css-variables) != "";

/*
 * ================ Design Token Variables ================
 * Extracted from $tokens wrapper - maintains existing API names
 */

// Typography tokens
$typography-tokens: map.get($tokens, typography);
$font-families: map.get($typography-tokens, families);
$font-weights: map.get($typography-tokens, weights);
$font-sizes: map.get($typography-tokens, sizes);
$modular-scale: map.get($typography-tokens, modular-scale);
$line-heights: map.get($typography-tokens, line-heights);
$tracking: map.get($typography-tokens, tracking);
$style-guide-combinations: map.get($typography-tokens, style-guide);

// Spacing tokens
$spacing-tokens: map.get($tokens, spacing);
$space-base: map.get($spacing-tokens, base);
$spacing-scale: map.get($spacing-tokens, scale);
$size-percentages: map.get($spacing-tokens, percentages);

// Responsive tokens
$breakpoints: map.get($tokens, breakpoints);

// Effect tokens
$effects-tokens: map.get($tokens, effects);
$border-radius: map.get($effects-tokens, border-radius);
$border-widths: map.get($effects-tokens, border-widths);
$border-styles: map.get($effects-tokens, border-styles);
$opacity-scale: map.get($effects-tokens, opacity-scale);
$shadow-scale: map.get($effects-tokens, shadow-scale);
$shadow-color: map.get($effects-tokens, shadow-color);
$gradients: map.get($effects-tokens, gradients);
$gradient-default-type: map.get($effects-tokens, gradient-default-type);

// Interaction tokens
$interaction-tokens: map.get($tokens, interaction);
$cursor-types: map.get($interaction-tokens, cursor-types);
$transition-duration: map.get($interaction-tokens, transition-duration);
$transition-easing: map.get($interaction-tokens, transition-easing);

/*
 * ================ Base Configuration Variables ================
 * Extracted from $base wrapper for component styling
 */

// Page configuration
$page-config: map.get($base, page);
$page-background-color: map.get($page-config, background-color);

// Typography configuration
$typography-config: map.get($base, typography);
$body-font-family: map.get($typography-config, body-font-family);
$body-font-size: map.get($typography-config, body-font-size);
$body-font-weight: map.get($typography-config, body-font-weight);
$body-line-height: map.get($typography-config, body-line-height);
$body-text-color: map.get($typography-config, body-text-color);
$heading-font-family: map.get($typography-config, heading-font-family);
$heading-font-weight: map.get($typography-config, heading-font-weight);
$heading-text-color: map.get($typography-config, heading-text-color);
$list-marker-color: map.get($typography-config, list-marker-color);
$code-text-color: map.get($typography-config, code-text-color);
$code-background-color: map.get($typography-config, code-background-color);
$kbd-text-color: map.get($typography-config, kbd-text-color);
$kbd-background-color: map.get($typography-config, kbd-background-color);

// Form configuration
$forms-config: map.get($base, forms);
$input-border-color: map.get($forms-config, input-border-color);
$input-focus-color: map.get($forms-config, input-focus-color);
$input-placeholder-color: map.get($forms-config, input-placeholder-color);
$input-disabled-color: map.get($forms-config, input-disabled-color);

// Button configuration
$buttons-config: map.get($base, buttons);
$button-background-color: map.get($buttons-config, background-color);
$button-border-color: map.get($buttons-config, border-color);
$button-text-color: map.get($buttons-config, text-color);

// Link configuration
$links-config: map.get($base, links);
$link-text-color: map.get($links-config, text-color);
$link-decoration-color: map.get($links-config, decoration-color);
$link-hover-color: map.get($links-config, hover-color);

// Table configuration
$tables-config: map.get($base, tables);
$table-border-color: map.get($tables-config, border-color);
$table-header-text-color: map.get($tables-config, header-text-color);
$table-header-background: map.get($tables-config, header-background);
$table-cell-text-color: map.get($tables-config, cell-text-color);

// Effects configuration
$effects-config: map.get($base, effects);
$border-default-color: map.get($effects-config, border-color);
$border-default-width: map.get($effects-config, border-width);
$border-default-style: map.get($effects-config, border-style);
$border-default-radius: map.get($effects-config, border-radius);
$shadow-default-color: map.get($effects-config, shadow-color);
$shadow-default-softness: map.get($effects-config, shadow-softness);
$shadow-default-horizontal: map.get($effects-config, shadow-horizontal);
$shadow-default-vertical: map.get($effects-config, shadow-vertical);
$shadow-default-hardness: map.get($effects-config, shadow-hardness);
$shadow-invert-alpha: map.get($effects-config, shadow-invert-alpha);

// Animation configuration
$animation-config: map.get($base, animation);
$transition-default-duration: map.get($animation-config, transition-duration);
$transition-default-easing: map.get($animation-config, transition-easing);

/*
 * ================ Legacy Compatibility ================
 * Aliases for variables that might be referenced by existing framework code
 */

// Maintain old naming for internal compatibility
$useReset: $enable-reset;
$useBase: $enable-base;
$medias: $responsive-breakpoints;

// Shadow configuration (maintain old variable names)
$shadow-soft: $shadow-default-softness;
$shadow-horizontal: $shadow-default-horizontal;
$shadow-vertical: $shadow-default-vertical;
$shadow-hard: $shadow-default-hardness;
$shadow-invert-alpha: $shadow-invert-alpha;

// Border configuration
$border-color: $border-default-color;
$border-width: $border-default-width;
$border-style: $border-default-style;
