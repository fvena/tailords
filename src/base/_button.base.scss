@use "../variables" as *;
@use "../base.variables" as *;
@use "../core/colors.core" as *;
@use "../core/sizes.core" as *;
@use "../core/borders.core" as *;

@mixin button-default {
  background-color: var(--primary);
  color: var(--primary-foreground);
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* from shadow-xs */

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      background-color: color-mix(
        in srgb,
        var(--primary) 90%,
        transparent
      ); /* from hover:bg-primary/90 */
    }
  }
}

@mixin button-destructive {
  background-color: var(--destructive);
  color: white;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* from shadow-xs */

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      background-color: color-mix(
        in srgb,
        var(--destructive) 90%,
        transparent
      ); /* from hover:bg-destructive/90 */
    }
  }
}

@mixin button-outline {
  border: 1px solid var(--border);
  background-color: var(--background);
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* from shadow-xs */

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  }
}

@mixin button-secondary {
  background-color: var(--secondary);
  color: var(--secondary-foreground);
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* from shadow-xs */

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      background-color: color-mix(
        in srgb,
        var(--secondary) 80%,
        transparent
      ); /* from hover:bg-secondary/80 */
    }
  }
}

@mixin button-ghost {
  background-color: transparent;
  border: none;
  box-shadow: none;

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  }
}

@mixin button-link {
  color: var(--primary);
  text-decoration: underline;
  text-underline-offset: 4px; /* from underline-offset-4 */
  background-color: transparent;
  border: none;
  box-shadow: none;

  @media (hover: hover) and (pointer: fine) {
    &:hover:not([disabled]) {
      text-decoration: underline;
    }
  }
}

@mixin button-icon {
  width: 2.25rem; /* from size-9 */
  height: 2.25rem;
  padding: 0;
}

@mixin button-medium {
  height: 2.25rem; /* from h-9 */
  padding: 0.5rem 1rem; /* from px-4 py-2 */

  &:has(> svg) {
    padding-left: 0.75rem; /* from has-[>svg]:px-3 */
    padding-right: 0.75rem;
  }
}

@mixin button-small {
  height: 2rem; /* from h-8 */
  border-radius: var(--radius-md);
  gap: 0.375rem; /* from gap-1.5 */
  padding: 0 0.75rem; /* from px-3 */

  &:has(> svg) {
    padding-left: 0.625rem; /* from has-[>svg]:px-2.5 */
    padding-right: 0.625rem;
  }
}

@mixin button-large {
  height: 2.5rem; /* from h-10 */
  border-radius: var(--radius-md);
  padding: 0 1.5rem; /* from px-6 */

  &:has(> svg) {
    padding-left: 1rem; /* from has-[>svg]:px-4 */
    padding-right: 1rem;
  }
}

@if $enable-base {
  /*
  * ================ Base Button Styles ================
  */

  /*
   * Default button layout
   * Full-width blocks for mobile-first approach
   */
  // button {
  //   display: block;
  //   width: 100%;
  // }

  /*
   * Role-based button styling
   * Removes default link appearance for semantic buttons
   */
  [role="button"] {
    text-decoration: none;
  }

  /*
   * Comprehensive button styling
   * Applies to all button-type elements for consistency
   */
  .button,
  button,
  input[type="submit"],
  input[type="button"],
  input[type="reset"],
  [role="button"] {
    @include button-default;
    @include button-medium;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem; /* from gap-2 */
    white-space: nowrap;
    border-radius: var(--radius-md);
    font-size: 0.875rem; /* from text-sm */
    line-height: calc(1.25 / 0.875); /* from leading-5 */
    font-weight: 500; /* from font-medium */
    transition: all $base-transition-duration $base-transition-easing; /* from transition-all */
    pointer-events: auto;
    flex-shrink: 0;
    outline-style: none;
    border: 1px solid transparent;
    cursor: pointer;
    user-select: none;

    // STATES

    /*
     * Active/pressed state
     * Immediate feedback for user interaction
     */
    &:active:not([disabled]) {
      transform: scale(0.98);
    }

    /*
     * Focus state for accessibility
     * Clear indication for keyboard navigation
     */
    &:focus-visible {
      border-color: var(--ring);
      outline: 3px
        solid
        color-mix(
          in srgb,
          var(--ring) 50%,
          transparent
        ); /* from focus-visible:ring-ring/50 focus-visible:ring-[3px] */
    }

    /*
     * Disabled state
     * Clear visual indication of non-interactive state
     */
    &:disabled {
      pointer-events: none;
      opacity: 0.5; /* from disabled:opacity-50 */
      cursor: not-allowed;
    }

    /*
     * Invalid state for form validation
     */
    &[aria-invalid="true"] {
      outline: 3px
        solid
        color-mix(
          in srgb,
          var(--destructive) 20%,
          transparent
        ); /* from aria-invalid:ring-destructive/20 */
      border-color: var(--destructive); /* from aria-invalid:border-destructive */
    }

    // ELEMENTS

    // SVG ICON STYLING
    // Icon elements within buttons
    svg {
      pointer-events: none;
      flex-shrink: 0;

      &:not([class*="size-"]) {
        width: 1rem; /* from [&_svg:not([class*='size-'])]:size-4 */
        height: 1rem;
      }
    }
  }

  // VARIANTS - Visual Style
  // Primary action button with strong visual emphasis
  .button--default {
    @include button-default;
  }

  // Destructive action button for dangerous operations
  .button--destructive {
    @include button-destructive;
  }

  // Outlined button with border emphasis
  .button--outline {
    @include button-outline;
  }

  // Secondary emphasis button
  .button--secondary {
    @include button-secondary;
  }

  // Subtle button with minimal visual emphasis
  .button--ghost {
    @include button-ghost;
  }

  // Text-style button that appears as a link
  .button--link {
    @include button-link;
  }

  // Icon-only button with square aspect ratio
  .button--icon {
    @include button-icon;
  }

  // VARIANTS - Size
  // Medium button size for standard actions
  .button--medium {
    @include button-medium;
  }

  // Small button size for compact layouts
  .button--small {
    @include button-small;
  }

  // Large button size for prominent actions
  .button--large {
    @include button-large;
  }

  // DARK MODE
  // Dark theme variations with enhanced contrast
  [data-theme="dark"] {
    .button,
    button,
    input[type="submit"],
    input[type="button"],
    input[type="reset"],
    [role="button"] {
      &[aria-invalid="true"] {
        outline-color: color-mix(
          in srgb,
          var(--destructive) 40%,
          transparent
        ); /* from dark:aria-invalid:ring-destructive/40 */
      }
    }

    .button--outline {
      background-color: color-mix(
        in srgb,
        var(--input) 30%,
        transparent
      ); /* from dark:bg-input/30 */
      border-color: var(--input); /* from dark:border-input */

      @media (hover: hover) and (pointer: fine) {
        &:hover:not([disabled]) {
          background-color: color-mix(
            in srgb,
            var(--input) 50%,
            transparent
          ); /* from dark:hover:bg-input/50 */
        }
      }
    }

    .button--ghost:hover {
      background-color: color-mix(
        in srgb,
        var(--accent) 50%,
        transparent
      ); /* from dark:hover:bg-accent/50 */
    }

    .button--destructive {
      background-color: color-mix(
        in srgb,
        var(--destructive) 60%,
        transparent
      ); /* from dark:bg-destructive/60 */

      &:focus-visible {
        outline-color: color-mix(
          in srgb,
          var(--destructive) 20%,
          transparent
        ); /* from dark:focus-visible:ring-destructive/40 */
      }
    }
  }
}
